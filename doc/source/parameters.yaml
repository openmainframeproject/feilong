min_version_sdk:
  description: |
    min version of SDK
  in: header
  required: true
  type: string
max_version_sdk:
  description: |
    max version of SDK
  in: header
  required: true
  type: string
version_sdk:
  description: |
    version of SDK
  in: header
  required: true
  type: string
token_user:
  description: |
    user
  in: body
  required: true
  type: string
token_password:
  description: |
    password
  in: body
  required: true
  type: string
userid_body:
  description: |
    guests userid
  in: body
  required: true
  type: string
guest_list:
  description: |
    guests list
  in: body
  required: true
  type: list
guest_userid:
  description: |
    guest userid
  in: path
  required: true
  type: string
guest_vcpus:
  description: |
    amount of vcpus
  in: body
  required: true
  type: integer
guest_memory:
  description: |
    size of memory in MB
  in: body
  required: true
  type: integer
guest_memory_kb:
  description: |
    size of memory in KB
  in: body
  required: true
  type: integer
guest_vnics:
  description: |
    vNICs statistics of one guest
  in: body
  required: true
  type: dict
guest_nic_info:
  description: |
    vNIC and vswitch pair of guest
  in: body
  required: true
  type: dict
guest_info:
  description: |
    status of guest
  in: body
  required: true
  type: integer
user_profile_guest:
  description: |
    profile of guest
  in: body
  required: false
  type: string
user_direct_guest:
  description: |
    user direct of guest
  in: body
  required: true
  type: string
disk_list_guest:
  description: |
    disk list of guest
    It has one dictionary that contain some of the below keys for
    each disk, the root disk should be the first element in the
    list.
  in: body
  required: false
  type: list
userid_list_guest:
  description: |
      a single userid string or a list of guest userids
  in: body
  required: true
  type: list
cpu_info_guest:
  description: |
    cpu statics of guest
  in: body
  required: true
  type: dict
power_status_guest:
  description: |
    power status of guest, **on** or **off**
  in: body
  required: true
  type: string
cpu_time_us_guest:
  description: |
    cpu time used in microseconds
  in: body
  required: true
  type: integer
num_cpu_guest:
  description: |
    the number of virtual CPUs of guest
  in: body
  required: true
  type: integer
action_start_guest:
  description: |
    take **start** action on guest
  in: body
  required: true
  type: dict
action_stop_guest:
  description: |
    take **stop** action on guest
  in: body
  required: true
  type: dict
action_pause_guest:
  description: |
    take **pause** action on guest
  in: body
  required: true
  type: dict
action_unpause_guest:
  description: |
    take **unpause** action on guest
  in: body
  required: true
  type: dict
action_reboot_guest:
  description: |
    take **reboot** action on guest
  in: body
  required: true
  type: dict
action_reset_guest:
  description: |
    take **reset** action on guest
  in: body
  required: true
  type: dict
action_deploy_guest:
  description: |
    take **deploy** action on guest
  in: body
  required: true
  type: dict
action_get_console_guest:
  description: |
    take **get console output** action on guest
  in: body
  required: true
  type: dict
vdev_guest:
  description: |
    nic device number, 1- to 4- hexadecimal digits
  in: path
  required: true
  type: string
host_info:
  description: |
    the object of host information.
  in: body
  required: true
  type: dict
disk_host:
  description: |
    the disk name to get pool information from.
  in: body
  required: true
  type: string
disk_info_host:
  description: |
    the object of disk information.
  in: body
  required: true
  type: dict
image_name:
  description: |
    the image name in image repository.
  in: body
  required: true
  type: string
image_url:
  description: |
    the url to specify the location of image.
  in: body
  required: true
  type: string
image_metadata:
  description: |
    the metadata to describe image.
  in: body
  required: true
  type: dict
remotehost_image:
  description: |
    the remotehost to indicate where the image comes from.
  in: body
  required: false
  type: string
root_disk_size_image:
  description: |
    root disk size in units CYL or BLK of image
  in: body
  required: true
  type: integer
vswitch_name:
  description: |
    vswitch name
  in: path
  required: true
  type: string
vswitch_name_body:
  description: |
    vswitch name
  in: body
  required: true
  type: string
rdev_vswitch:
  description: |
    the real device number, a maximum of three devices.
  in: body
  required: true
  type: string
controller_vswitch:
  description: |
    the vswitch's controller. It could be userid or "*" to
    specifies any available controller.
  in: body
  required: false
  type: string
connection_vswitch:
  description: |
    Connection type option:

    - ``CONnect``: Activate the real device connection.
    - ``DISCONnect``: Do not active the real device connection.
    - ``NOUPLINK``: the vswitch will never have connectivity through.
  in: body
  required: false
  type: string
network_type_vswitch:
  description: |
    Specifies the transport mechanism to be used for switch,
    as follow:IP, ETHERNET.
  in: body
  required: false
  type: string
router_vswitch:
  description: |
    Connection type option.

    - ``NONrouter``: The OSA-Express device identified in
      real_device_address= will not act as a router to the vswitch.
    - ``PRIrouter``: The OSA-Express device identified in
      real_device_address= will act as a primary router to the vswitch.
    - ``Note``: If the network_type is ETHERNET, this value must be
      unspecified, otherwise, if this value is unspecified,
      default is NONROUTER
  in: body
  required: false
  type: string
vid_vswitch:
  description: |
    the VLAN ID. This can be any of the following values:UNAWARE,
    AWARE or 1-4094
  in: body
  required: false
  type: string, integer
port_type_vswitch:
  description: |
    port type.

    - ``ACCESS``: The default porttype attribute for
      guests authorized for the virtual switch.
      The guest is unaware of VLAN IDs and sends and
      receives only untagged traffic
    - ``TRUNK``: The default porttype attribute for
      guests authorized for the virtual switch.
      The guest is VLAN aware and sends and receives tagged
      traffic for those VLANs to which the guest is authorized.
      If the guest is also authorized to the natvid, untagged
      traffic sent or received by the guest is associated with
      the native VLAN ID (natvid) of the virtual switch.
  in: body
  required: false
  type: string
gvrp_vswitch:
  description: |
    gvrp.

    - ``GVRP``: Indicates that the VLAN IDs in use on the virtual
      switch should be registered with GVRP-aware switches on the
      LAN. This provides dynamic VLAN registration and VLAN
      registration removal for networking switches. This
      eliminates the need to manually configure the individual
      port VLAN assignments.
    - ``NOGVRP``: Do not register VLAN IDs with GVRP-aware switches on
      the LAN. When NOGVRP is specified VLAN port assignments
      must be configured manually
  in: body
  required: false
  type: string
queue_mem_vswitch:
  description: |
    A number between 1 and 8, specifying the QDIO
    buffer size in megabytes
  in: body
  required: false
  type: integer
native_vid_vswitch:
  description: |
    the native vlan id, 1-4094 or None.
  in: body
  required: false
  type: integer
persist_option_vswitch:
  description: |
    whether create the vswitch in the permanent
    configuration for the system.
  in: body
  required: false
  type: boolean
vswitch_list:
  description: |
    list of vswitches.
  in: body
  required: true
  type: list

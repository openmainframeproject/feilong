#!/bin/python
import getopt
import os
import random
import stat
import string
import sys


class TokenfileNotSpecified(Exception):
    def __init__(self, msg):
        self.msg = msg
def usage():
    print ("Usage: gen-token [-h|-u|-i] [--help|--update|--init] <path_of_toke_file>...")
    print ("Generate and update token file for sdkserver.")
    print("")
    print ("-h, --help\t\tdisplay help usage.")
    print ("-i, --init\t\tinit token file and generate a random admin token in file.")
    print ("-u, --update\t\tthe admin token to be updated into token file.")


def write_token_file(file_path, token):
    #if file not exits, create it
    if not os.path.exists(file_path):
        os.mknod(file_path)
    # write token data
    with open(file_path, 'w') as fp:
        fp.write(token)
    # change file mode to 400
    os.chmod(file_path, stat.S_IRUSR)


def random_token():
    # random token only include upper cases and digits
    token_random = ''.join(
            random.choice(string.ascii_uppercase +\
                          string.ascii_lowercase +\
                          string.digits)
            for _ in range(42))
    return token_random


def main(argv):
    try:
        opts, args = getopt.getopt(argv, 'hu:i', ["help", "update", "init"])
        for o, a in opts:
            if o in ('-h', '--help'):
                usage()
                sys.exit(1)
            if o in ('-u', '--update'):
                # init_token_config(a)
                if args == []:
                    raise TokenfileNotSpecified('Token file not specified')
                write_token_file(args[0], a)
                msg = "updating token succeed, please remeber" +\
                      "to update the token data on client side!"
                print msg
                sys.exit(1)
            if o in ('-i', '--init'):
                if args == []:
                    raise TokenfileNotSpecified('Token file not specified')
                write_token_file(args[0], a)
                token = random_token()
                write_token_file(args[0], token)
                sys.exit(1)
    except getopt.GetoptError:
        print('gen-token ERROR!')
        usage()
        sys.exit(1)
    except TokenfileNotSpecified as err:
        print('gen-token ERROR:%s.' % err.msg)
        print('')
        usage()
        sys.exit(1)

if "__main__" == __name__:
    main(sys.argv[1:])

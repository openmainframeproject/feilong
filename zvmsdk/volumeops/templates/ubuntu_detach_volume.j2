#!/bin/bash
# Generated by jinja2 template
fcp_list="{{ fcp_list }}"
# lun example: 0x0100000000000000
lun="{{ lun }}"
# 1. if the lun id less than 256,
#    the file under /dev/disk/by-path/ will as below,
#    take 'lun id = 0' as example:
#    ccw-0.0.5c03-fc-0x5005076802400c1a-lun-0, the the lun id is decimal.
# 2. if the lun id is equal or more than 256,
#    the file under /dev/disk/by-path/ will as below,
#    take 'lun id = 256' as example:
#    ccw-0.0.1a0d-fc-0x500507680b26bac7-lun-0x0100000000000000,
#    the lun id is hex.
lun_id="{{ lun_id }}"
target_filename="{{ target_filename }}"
is_last_volume="{{ is_last_volume }}"

echo "Enter UBUNTU detach script with parameters: FCP:${fcp_list[@]}, LUN:$lun, LUN ID: $lun_id, target_filename:$target_filename, is_last_volume: $is_last_volume."

# use awk to replace grep, because if lun_id equals 0 and will also get 0x0100000000000000, not only lun-0
SourceDevices=(`ls /dev/disk/by-path/ | awk "/ccw-0\.0\..*-fc-.*-lun-$lun_id$/"`)
echo "get source devices: ${SourceDevices[@]}"

# get the wwid of device, the WWID are same for same volume
WWID=$(/lib/udev/scsi_id --page 0x83 --whitelisted /dev/disk/by-path/${SourceDevices[0]})
echo "scsi_id command get WWID:$WWID for device: ${SourceDevices[0]} under /dev/disk/by-path"

# flush IO for devices
RealPath=`readlink -f /dev/disk/by-path/${SourceDevices[0]}`
blockdev --flushbufs $RealPath > /dev/null

# exit code default to 0, because WWID may be empty
exit_code=0

# get the map name of the WWID
# then use multipath -f <map name> to flush the device
map_name=$(multipath -l $WWID -v 1)
echo "get map name: $map_name"
output=$(multipath -f $map_name 2>&1)
exit_code=$?
# error output not empty, means error happened
# and the error 'in use' and 'must provode a map name'
# of multipath -f will return same exit code 1
# so diff them, we will ingore the error of 'must provide a map name'
if [ "$output" ]; then
    if [ "$(echo $output | grep -i 'must provide a map name')" ]; then
        echo "ignore error on WWID $WWID and Lun $lun:$output"
        exit_code=0
    elif [ "$(echo $output | grep -i 'in use')" ]; then
        echo "device with WWID $WWID and Lun $lun is use:$output"
        exit_code=1
    else
        echo "unknown error on device with WWID $WWID and Lun $lun:$output"
        exit_code=2
    fi
fi
echo "exit code for multipath -f: $exit_code"
#if above code didn't succeed, exit now.
if [[ $exit_code != 0 ]]; then
    exit $exit_code
fi

declare -a ActiveWWPNs
for fcp in ${fcp_list[@]}
do
    ActiveWWPNs=(`ls /sys/bus/ccw/drivers/zfcp/0.0.$fcp/ | grep "0x"`)
    
    # If auto-discovery of LUNs is disabled on s390 platforms
    # luns need to be added to the configuration through
    # the unit_add interface
    AutoLunScan=`cat /sys/module/zfcp/parameters/allow_lun_scan`
    if [[ "$AutoLunScan" != "Y" ]]; then
        for WWPN in ${ActiveWWPNs[@]}
        do
            /sbin/chzdev -d zfcp-lun 0.0.$fcp:$WWPN:$lun
        done
    fi
    
    # if is last volume, then should offline the FCP
    if [ $is_last_volume -eq 1 ]; then
        /sbin/chzdev zfcp-host $fcp -d
    fi
done

ConfigLib="/lib/udev/rules.d/56-zfcp.rules"
if [ -e "$ConfigLib" ]
then
    ConfigFile="/lib/udev/rules.d/56-zfcp.rules"
else
    ConfigFile="/etc/udev/rules.d/56-zfcp.rules"
fi
sed -i -e /SYMLINK+=\"$target_filename\"/d $ConfigFile

udevadm control --reload
udevadm trigger --sysname-match=dm-*

exit 0


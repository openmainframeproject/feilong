#!/bin/bash
#Generated by jinja2 template

fcp="{{ fcp }}"
lun="{{ lun }}"
target_filename="{{ target_filename }}"

# the device path
SourceDevice=(`ls /dev/disk/by-path/ | grep "ccw-0.0.$fcp-zfcp-.*:$lun"`)
echo "get source device path:$SourceDevice"

# the wwid of device
WWID=$(/lib/udev/scsi_id --page 0x83 --whitelisted /dev/disk/by-path/$SourceDevice)
echo "scsi_id get WWID:$WWID"

# get the real WWPNs in the file system
declare -a ActiveWWPNs
ActiveWWPNs=(`ls /sys/bus/ccw/drivers/zfcp/0.0.$fcp/ | grep "0x"`)

# exit code default to 0, because WWIDs may be empty
exit_code=0

# get the map name of the WWID, because multipath -f need map name
map_name=$(multipath -l $WWID -v 1)
echo "get map name: $map_name"
output=$(multipath -f $map_name 2>&1)
exit_code=$?

# error output not empty, means error happened
# and the error 'in use' and 'must provode a map name'
# of multipath -f will return same exit code 1
# so diff them, we will ingore the error of 'must provide a map name'
if [ "$output" ]; then
    if [ "$(echo $output | grep -i 'must provide a map name')" ]; then
        echo "ignore error on FCP $fcp and Lun $lun:$output"
        exit_code=0
    elif [ "$(echo $output | grep -i 'in use')" ]; then
        echo "FCP $fcp and Lun $lun is use:$output"
        exit_code=1
    else
        echo "unknown error on FCP $fcp and Lun $lun:$output"
        exit_code=2
    fi
fi

echo "exit code for multipath -f: $exit_code"
# if above code didn't succeed, exit now.
#if [[ $exit_code != 0 ]]; then
#    exit $exit_code
#fi

# flush IO for devices
RealPath=`readlink -f /dev/disk/by-path/$SourceDevice`
blockdev --flushbufs $RealPath > /dev/null
SdxName=`echo "$RealPath" | cut -d "/" -f 3`
echo "get SdxName: $SdxName"
echo 1 > /sys/block/$SdxName/device/delete

# If auto-discovery of LUNs is disabled on s390 platforms
# luns need to be removed from the configuration through
# the unit_remove interface
AutoScan=`cat /sys/module/zfcp/parameters/allow_lun_scan`
if [[ "$AutoScan" != "Y" ]]; then
    for wwpn in $ActiveWWPNs
    do
        chzdev -d zfcp-lun 0.0.$fcp:$wwpn:$lun
        echo "$lun" > /sys/bus/ccw/drivers/zfcp/0.0.$fcp/$wwpn/unit_remove
    done
fi

# remove configuration items in zfcp.conf
for WWPN in ${ActiveWWPNs[@]}
do
    echo "remove WWPN $WWPN in zfcp.conf"
    sed -i -e "/0.0.$fcp $WWPN $lun/d" /etc/zfcp.conf
done

# remove udev rules and reload
TargetFile="$target_filename"
ConfigLib="/lib/udev/rules.d/56-zfcp.rules"
if [ -e "$ConfigLib" ]
then
    ConfigFile="/lib/udev/rules.d/56-zfcp.rules"
else
    ConfigFile="/etc/udev/rules.d/56-zfcp.rules"
fi
sed -i -e /SYMLINK+=\"$TargetFile\"/d $ConfigFile

# reload udev rules
udevadm control --reload
udevadm trigger --sysname-match=dm-*

exit 0
